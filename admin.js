// ====== C·∫§U H√åNH ======
const API_URL = "https://script.google.com/macros/s/AKfycbwERNk5suUjA5KpJnrGieSUoTE5T6DG9wl4swHqHZ6OAakmqEiLn29NJKSZZuIkN3Mr/exec";
const IMGUR_CLIENT_ID = "546f4b9e7e2922e";

let editingIndex = null; // D√πng ƒë·ªÉ x√°c ƒë·ªãnh s·∫£n ph·∫©m ƒëang s·ª≠a

// ====== T·∫¢I DANH S√ÅCH S·∫¢N PH·∫®M ======
async function fetchProducts() {
  try {
    const res = await fetch(API_URL);
    if (!res.ok) throw new Error(`HTTP ${res.status}`);
    const data = await res.json();
    renderProductList(data);
  } catch (err) {
    console.error("üî• L·ªói khi l·∫•y d·ªØ li·ªáu:", err);
    alert("‚ùå Kh√¥ng t·∫£i ƒë∆∞·ª£c d·ªØ li·ªáu t·ª´ Google Sheet. Vui l√≤ng ki·ªÉm tra l·∫°i URL v√† quy·ªÅn Web App.");
  }
}

// ====== HI·ªÇN TH·ªä DANH S√ÅCH S·∫¢N PH·∫®M ======
function renderProductList(products) {
  const container = document.getElementById("productListAdmin");
  container.innerHTML = products.map((p, i) => `
    <div class="product-item">
      <img src="${p.image || ''}" width="100" alt="·∫¢nh s·∫£n ph·∫©m"><br>
      <strong>${p.name}</strong><br>
      Gi√°: ${p.price}<br>
      M√¥ t·∫£: ${p.description}<br>
      Lo·∫°i: ${p.type}<br>
      <button onclick="editProduct(${i})" class="secondary">‚úèÔ∏è S·ª≠a</button>
      <button onclick="deleteProduct(${i})" class="danger">üóëÔ∏è X√≥a</button>
    </div><hr>
  `).join("");
}

// ====== CH·ªàNH S·ª¨A S·∫¢N PH·∫®M ======
async function editProduct(index) {
  try {
    const res = await fetch(API_URL);
    const data = await res.json();
    const p = data[index];
    document.getElementById("name").value = p.name;
    document.getElementById("price").value = p.price;
    document.getElementById("description").value = p.description;
    document.getElementById("type").value = p.type;
    // NOTE: ·∫¢nh c≈© v·∫´n gi·ªØ, d√πng ƒë·ªÉ submit n·∫øu kh√¥ng ch·ªçn ·∫£nh m·ªõi
    document.getElementById("previewImg").src = p.image;
    document.getElementById("previewImg").style.display = p.image ? 'block' : 'none';
    editingIndex = index;
    window.scrollTo({ top: 0, behavior: 'smooth' });
  } catch (err) {
    console.error("‚ö†Ô∏è L·ªói editProduct:", err);
  }
}

// ====== X√ìA S·∫¢N PH·∫®M ======
async function deleteProduct(index) {
  if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a s·∫£n ph·∫©m n√†y?")) return;
  try {
    const res = await fetch(`${API_URL}?delete=${index}`);
    if (!res.ok) throw new Error(`HTTP ${res.status}`);
    const result = await res.json();
    if (result.status === "success") {
      alert("‚úÖ ƒê√£ x√≥a s·∫£n ph·∫©m.");
      fetchProducts();
    } else {
      alert("‚ùå X√≥a th·∫•t b·∫°i.");
    }
  } catch (err) {
    console.error("‚ö†Ô∏è L·ªói deleteProduct:", err);
    alert("‚ùå L·ªói khi x√≥a s·∫£n ph·∫©m.");
  }
}

// ====== UPLOAD ·∫¢NH & G·ª¨I D·ªÆ LI·ªÜU ======
async function uploadAndSend(e) {
  e.preventDefault();
  const name = document.getElementById("name").value.trim();
  const price = document.getElementById("price").value.trim();
  const type = document.getElementById("type").value;
  const imageFile = document.getElementById("imageFile").files[0];
  const description = document.getElementById("description").value.trim();
  const status = document.getElementById("status");

  if (!name || !price || !type || !description) {
    alert("Vui l√≤ng ƒëi·ªÅn ƒë·ªß th√¥ng tin.");
    return;
  }

  status.textContent = "‚è≥ ƒêang x·ª≠ l√Ω...";
  let imageUrl = document.getElementById("previewImg").src || "";

  if (imageFile) {
    const formData = new FormData();
    formData.append("image", imageFile);
    try {
      const res = await fetch("https://api.imgur.com/3/image", {
        method: "POST",
        headers: { Authorization: `Client-ID ${IMGUR_CLIENT_ID}` },
        body: formData
      });
      const data = await res.json();
      console.log("Imgur response:", data);
      if (data.success) {
        imageUrl = data.data.link;
      } else {
        alert("‚ùå Upload ·∫£nh th·∫•t b·∫°i.");
        status.textContent = "";
        return;
      }
    } catch (err) {
      console.error("‚ö†Ô∏è L·ªói upload ·∫£nh:", err);
      alert("‚ùå Kh√¥ng th·ªÉ upload ·∫£nh.");
      status.textContent = "";
      return;
    }
  }

  const payload = { name, price, type, description, image: imageUrl };
  let url = API_URL + (editingIndex !== null ? `?edit=${editingIndex}` : "");

  try {
    const res = await fetch(url, {
      method: "POST",
      body: JSON.stringify(payload)
    });
    const result = await res.json();
    if (result.status === "success") {
      status.textContent = editingIndex !== null ? "‚úÖ ƒê√£ c·∫≠p nh·∫≠t!" : "‚úÖ Th√™m th√†nh c√¥ng!";
      editingIndex = null;
      document.getElementById("productForm").reset();
      document.getElementById("previewImg").style.display = "none";
      fetchProducts();
    } else {
      alert("‚ùå L·ªói l∆∞u d·ªØ li·ªáu.");
    }
  } catch (err) {
    console.error("‚ö†Ô∏è L·ªói send data:", err);
    alert("‚ùå L·ªói g·ª≠i d·ªØ li·ªáu.");
  }
}

// ====== EVENT LISTENERS ======
document.addEventListener("DOMContentLoaded", fetchProducts);
document.getElementById("productForm").addEventListener("submit", uploadAndSend);
